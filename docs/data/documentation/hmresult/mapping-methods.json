{"hierarchy":{"paths":[["doc:\/\/HMResult\/documentation\/HMResult","doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/hmresult\/mapping-methods"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"HMResult"}],"role":"collectionGroup","title":"Mapping Methods","roleHeading":"API Collection"},"primaryContentSections":[{"content":[{"text":"General transformation","type":"heading","level":5,"anchor":"General-transformation"},{"inlineContent":[{"type":"text","text":"Transforming a value, by applying a function to it using dot syntax, is sometimes an easier-to-read way to write code, and probably ought to be available on "},{"type":"emphasis","inlineContent":[{"text":"every type","type":"text"}]},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func transform<Transformed, Error>(","  _ transform: (Self) throws(Error) -> Transformed",") throws(Error) -> Transformed {","  try transform(self)","}"]},{"inlineContent":[{"type":"text","text":"But that‚Äôs not specific to "},{"code":"Result","type":"codeVoice"},{"type":"text","text":", and is not included in this package."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"We "},{"type":"emphasis","inlineContent":[{"type":"text","text":"could"}]},{"type":"text","text":" restrict the transformation to require mapping similar types of "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"s, such as"}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"Result<Int, Never>"},{"type":"text","text":" ‚û°Ô∏è "},{"type":"codeVoice","code":"Result<String, any Error>"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"That would look like this:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func transform<NewSuccess, NewFailure, Error>(","  _ transform: (Self) throws(Error) -> Result<NewSuccess, NewFailure>",") throws(Error) -> Result<NewSuccess, NewFailure> {","  try transform(self)","}"]},{"inlineContent":[{"text":"Even with this new restriction, the possibilities are so vast in what can be accomplished there, that it‚Äôs not worth creating a function for. And so again, this ","type":"text"},{"code":"transform","type":"codeVoice"},{"text":" is not included in this package either.","type":"text"}],"type":"paragraph"},{"text":"flatMap","type":"heading","level":3,"anchor":"flatMap"},{"inlineContent":[{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" is the closest to a general-purpose "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" method that this package works with. The capabilities are different in only two respects:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"flatMap"},{"type":"text","text":"‚Äòs‚Äô "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" closure operates only on a wrapped value, instead of an entire "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" instance."}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" cannot modify the wrapped error type."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"The ‚Äú"},{"type":"codeVoice","code":"flat"},{"type":"text","text":"‚Äù in "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" refers to the way that it introduces no more ‚Äúnesting‚Äù than the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" represented before transformation. For example,"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Result<String, Never>.flatMap"]},{"inlineContent":[{"type":"text","text":", when supplied with a "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" closure returning type"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Result<Int, Never>"]},{"inlineContent":[{"type":"text","text":", will return"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Result<Int, Never>"]},{"inlineContent":[{"text":", as opposed to an ‚Äúunflattened‚Äù","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["Result<Result<Int, Never>, Never>"]},{"type":"thematicBreak"},{"inlineContent":[{"type":"reference","overridingTitleInlineContent":[{"text":"As documented below","type":"text"}],"isActive":true,"overridingTitle":"As documented below","identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/flatMap(_:)"},{"type":"text","text":", "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" will not throw an error when the transformed "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"failure"},{"type":"text","text":", but it will throw an error if the transformation throws an error."}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result\/flatMap(_:)"},{"type":"text","text":" nearly gets "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" right, but it does not incorporate throwing an error. This version should be deprecated."}],"type":"paragraph"},{"type":"heading","text":"flatMapAndMergeError","anchor":"flatMapAndMergeError","level":3},{"inlineContent":[{"text":"This is a special case of ","type":"text"},{"type":"codeVoice","code":"flatMap"},{"text":". If ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" throws the untransformed ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":"‚Äôs ","type":"text"},{"type":"codeVoice","code":"Failure"},{"text":" type, the error can be forwarded into the transformed ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" type, rather than being thrown from ","type":"text"},{"type":"codeVoice","code":"flatMap"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Both forms are useful. Naming this differently than ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"text":" is necessary because it would not be enough, for the compiler, to just add ","type":"text"},{"code":"try","type":"codeVoice"},{"text":" in front of another ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"text":" overload.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"map","anchor":"map","level":3},{"inlineContent":[{"text":"The only difference between ","type":"text"},{"type":"codeVoice","code":"flatMap"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"map"},{"text":" is that map‚Äôs ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" closure returns a ","type":"text"},{"type":"codeVoice","code":"Success"},{"text":", not a ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":". Thusly, no ‚Äúflattening‚Äù is necessary.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"As with ","type":"text"},{"code":"flatMap","type":"codeVoice"},{"text":", ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result\/map(_:)","type":"reference"},{"text":" nearly gets ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" right, but it does not incorporate throwing an error. This version should be deprecated.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"mapAndMergeError","anchor":"mapAndMergeError","level":3},{"inlineContent":[{"type":"text","text":"This is to "},{"type":"codeVoice","code":"map"},{"type":"text","text":" as "},{"type":"codeVoice","code":"flatMapAndMergeError"},{"type":"text","text":" is to "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"flatMapFailure","anchor":"flatMapFailure","level":3},{"inlineContent":[{"type":"text","text":"This is the same idea as "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":", except, with a transformation of the "},{"type":"codeVoice","code":"Result"},{"type":"text","text":"‚Äôs "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" type, rather than its "},{"type":"codeVoice","code":"Success"},{"type":"text","text":" type."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As we‚Äôve seen above with "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":" and "},{"type":"codeVoice","code":"map"},{"type":"text","text":", the standard library nearly gets this right, under the problematic* name "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result\/flatMapError(_:)","isActive":true},{"type":"text","text":", but it does not incorporate throwing an error. It "},{"type":"emphasis","inlineContent":[{"type":"text","text":"should"}]},{"type":"text","text":", for completeness, but does anyone need that? ü§î (It won‚Äôt be included in this package until we hear that they do.)"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"* It‚Äôs problematic because the failure type, while restricted to be an error, is called "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":", not "},{"type":"codeVoice","code":"Error"},{"type":"text","text":". And it‚Äôs not clear whether you‚Äôre mapping a failure enumeration case, or an error occurring from the transformation closure."}],"type":"paragraph"},{"type":"heading","text":"mapFailure","anchor":"mapFailure","level":3},{"inlineContent":[{"type":"text","text":"This is to "},{"type":"codeVoice","code":"flatMapFailure"},{"type":"text","text":" as "},{"type":"codeVoice","code":"map"},{"type":"text","text":" is to "},{"type":"codeVoice","code":"flatMap"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"mapFailureToSuccess","anchor":"mapFailureToSuccess","level":3},{"inlineContent":[{"type":"text","text":"This idea only works when the "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" type is going to be ‚Äúremoved‚Äù, which is represented by "},{"type":"codeVoice","code":"Never"},{"type":"text","text":". So, there‚Äôs no point in offering a "},{"type":"codeVoice","code":"flatMapFailureToSuccess"},{"type":"text","text":", as "},{"type":"codeVoice","code":"Result.failure"},{"type":"text","text":"s can‚Äôt be created with if their "},{"type":"codeVoice","code":"Failure"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"heading","text":"mapFailureToSuccessAndErrorToFailure","anchor":"mapFailureToSuccessAndErrorToFailure","level":3},{"inlineContent":[{"text":"This is a niche type of error mapping operation.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"It‚Äôs similar to the two ‚Äú","type":"text"},{"code":"‚Ä¶AndMergeError","type":"codeVoice"},{"text":"‚Äù methods in that an error thrown from transforming will become a ","type":"text"},{"code":"failure","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"But it‚Äôs dissimilar in that while the error thrown "},{"type":"emphasis","inlineContent":[{"text":"can","type":"text"}]},{"type":"text","text":" be "},{"code":"Failure","type":"codeVoice"},{"type":"text","text":", there‚Äôs no requirement of that (and it‚Äôs likely to be a rare case). So, calling this "},{"code":"mapFailureToSuccessAndMergeError","type":"codeVoice"},{"type":"text","text":" would not generally be accurate."}],"type":"paragraph"}],"kind":"content"}],"kind":"article","topicSections":[{"anchor":"Topics","identifiers":["doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/flatMap(_:)","doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/flatMapAndMergeError(_:)","doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/map(_:)","doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/mapAndMergeError(_:)","doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/mapFailureToSuccess(_:)","doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/mapFailureToSuccessAndErrorToFailure(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/HMResult\/documentation\/HMResult\/Mapping-Methods"},"references":{"doc://HMResult/documentation/HMResult/Swift/Result/mapFailureToSuccessAndErrorToFailure(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"mapFailureToSuccessAndErrorToFailure"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Failure"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Error"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"mapFailureToSuccessAndErrorToFailure(_:)","url":"\/documentation\/hmresult\/swift\/result\/mapfailuretosuccessanderrortofailure(_:)","role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Transform failures into successes and errors into failures."}],"identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/mapFailureToSuccessAndErrorToFailure(_:)"},"doc://HMResult/documentation/HMResult/Swift/Result/flatMapAndMergeError(_:)":{"identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/flatMapAndMergeError(_:)","abstract":[{"text":"Transform successes.","type":"text"}],"role":"symbol","title":"flatMapAndMergeError(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatMapAndMergeError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Failure"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":".","type":"text"}]},"url":"\/documentation\/hmresult\/swift\/result\/flatmapandmergeerror(_:)","kind":"symbol"},"https://developer.apple.com/documentation/swift/result/map(_:)":{"type":"link","titleInlineContent":[{"text":"the standard library","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result\/map(_:)","title":"the standard library","url":"https:\/\/developer.apple.com\/documentation\/swift\/result\/map(_:)"},"doc://HMResult/documentation/HMResult/Swift/Result/mapAndMergeError(_:)":{"conformance":{"constraints":[{"code":"Failure","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapAndMergeError","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/hmresult\/swift\/result\/mapandmergeerror(_:)","kind":"symbol","role":"symbol","title":"mapAndMergeError(_:)","identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/mapAndMergeError(_:)","type":"topic","abstract":[{"type":"text","text":"Transform successes."}]},"doc://HMResult/documentation/HMResult/Swift/Result/flatMap(_:)":{"title":"flatMap(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewSuccess"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Error"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewSuccess"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewSuccess"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Failure","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Error","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[{"type":"text","text":"Transform successes."}],"type":"topic","url":"\/documentation\/hmresult\/swift\/result\/flatmap(_:)","identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/flatMap(_:)","role":"symbol","kind":"symbol"},"doc://HMResult/documentation/HMResult/Swift/Result/map(_:)":{"type":"topic","kind":"symbol","url":"\/documentation\/hmresult\/swift\/result\/map(_:)","title":"map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Error","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewSuccess","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Transform successes."}],"conformance":{"constraints":[{"code":"Failure","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/map(_:)"},"https://developer.apple.com/documentation/swift/result/flatMap(_:)":{"titleInlineContent":[{"text":"The standard library","type":"text"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swift\/result\/flatMap(_:)","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result\/flatMap(_:)","title":"The standard library"},"doc://HMResult/documentation/HMResult/Swift/Result":{"abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","preciseIdentifier":"s:s6ResultO","text":"Result"}],"identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result","url":"\/documentation\/hmresult\/swift\/result","navigatorTitle":[{"kind":"identifier","text":"Result"}],"role":"symbol","type":"topic","title":"Result"},"https://developer.apple.com/documentation/swift/result":{"type":"link","titleInlineContent":[{"text":"Result","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result","title":"Result","url":"https:\/\/developer.apple.com\/documentation\/swift\/result"},"doc://HMResult/documentation/HMResult":{"kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/HMResult\/documentation\/HMResult","url":"\/documentation\/hmresult","title":"HMResult","abstract":[{"text":"Extended functionality for ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result","isActive":true,"type":"reference"},{"text":".","type":"text"}]},"https://developer.apple.com/documentation/swift/result/flatMapError(_:)":{"titleInlineContent":[{"code":"flatMapError","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swift\/result\/flatMapError(_:)","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/result\/flatMapError(_:)","title":"flatMapError"},"doc://HMResult/documentation/HMResult/Swift/Result/mapFailureToSuccess(_:)":{"url":"\/documentation\/hmresult\/swift\/result\/mapfailuretosuccess(_:)","title":"mapFailureToSuccess(_:)","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Failure","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Error","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mapFailureToSuccess","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Error","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Failure","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":"(","kind":"text"},{"text":"Error","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Never","kind":"typeIdentifier","preciseIdentifier":"s:s5NeverO"},{"text":">","kind":"text"}],"abstract":[{"text":"Transform failures into successes.","type":"text"}],"role":"symbol","identifier":"doc:\/\/HMResult\/documentation\/HMResult\/Swift\/Result\/mapFailureToSuccess(_:)","type":"topic"}}}